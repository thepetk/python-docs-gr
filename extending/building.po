# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-10 10:19+0300\n"
"PO-Revision-Date: 2025-05-21 21:57+0300\n"
"Last-Translator: ALEXANDROS TZIORAS alextzioras23@gmail.com\n"
"Language-Team: Language-Team: PyGreece <organizers@pygreece.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: extending/building.rst:7
msgid "Building C and C++ Extensions"
msgstr "Κατασκευή Επεκτάσεων C και C++"

#: extending/building.rst:9
msgid ""
"A C extension for CPython is a shared library (e.g. a ``.so`` file on Linux, "
"``.pyd`` on Windows), which exports an *initialization function*."
msgstr ""
"Μια επέκταση C για τη CPython είναι μια κοινόχρηστη βιβλιοθήκη (π.χ. ένα "
"αρχείο ``.so`` στο Linux, ή ``.pyd`` στα Windows), η οποία εξάγει μια "
"*συνάρτηση αρχικοποίησης*."

#: extending/building.rst:12
msgid ""
"To be importable, the shared library must be available on :envvar:"
"`PYTHONPATH`, and must be named after the module name, with an appropriate "
"extension. When using setuptools, the correct filename is generated "
"automatically."
msgstr ""
"Για να μπορεί να γίνει η εισαγωγή της, η κοινόχρηστη βιβλιοθήκη πρέπει να "
"είναι διαθέσιμη στο :envvar:`PYTHONPATH` και να έχει όνομα ίδιο με αυτό του "
"module, με τη σωστή επέκταση αρχείου. Όταν χρησιμοποιείται το setuptools, το "
"σωστό όνομα αρχείου δημιουργείται αυτόματα."

#: extending/building.rst:16
msgid "The initialization function has the signature:"
msgstr "Η συνάρτηση αρχικοποίησης έχει την εξής υπογραφή:"

#: extending/building.rst:20
msgid ""
"It returns either a fully initialized module, or a :c:type:`PyModuleDef` "
"instance. See :ref:`initializing-modules` for details."
msgstr ""
"Επιστρέφει είτε ένα πλήρως αρχικοποιημένο module, είτε ένα στιγμιότυπο :c:"
"type:`PyModuleDef`. Δείτε το :ref:`initializing-modules` για περισσότερες "
"λεπτομέρειες."

#: extending/building.rst:25
msgid ""
"For modules with ASCII-only names, the function must be named "
"``PyInit_<modulename>``, with ``<modulename>`` replaced by the name of the "
"module. When using :ref:`multi-phase-initialization`, non-ASCII module names "
"are allowed. In this case, the initialization function name is "
"``PyInitU_<modulename>``, with ``<modulename>`` encoded using Python's "
"*punycode* encoding with hyphens replaced by underscores. In Python::"
msgstr ""
"Για modules με ονόματα μόνο σε ASCII χαρακτήρες, η συνάρτηση πρέπει να "
"ονομάζεται ``PyInit_<modulename>``, όπου το ``<modulename>`` αντικαθίσταται "
"με το όνομα του module. Όταν χρησιμοποιείται :ref:`multi-phase-"
"initialization`, επιτρέπονται ονόματα module με μη ASCII χαρακτήρες. Σε αυτή "
"την περίπτωση, η συνάρτηση αρχικοποίησης ονομάζεται "
"``PyInitU_<modulename>``, με το ``<modulename>`` να κωδικοποιείται με το "
"*punycode* του Python, αντικαθιστώντας τις παύλες με κάτω παύλες. Στην "
"Python::"

#: extending/building.rst:32
msgid ""
"def initfunc_name(name):\n"
"    try:\n"
"        suffix = b'_' + name.encode('ascii')\n"
"    except UnicodeEncodeError:\n"
"        suffix = b'U_' + name.encode('punycode').replace(b'-', b'_')\n"
"    return b'PyInit' + suffix"
msgstr ""
"def initfunc_name(name):\n"
"    try:\n"
"        suffix = b'_' + name.encode('ascii')\n"
"    except UnicodeEncodeError:\n"
"        suffix = b'U_' + name.encode('punycode').replace(b'-', b'_')\n"
"    return b'PyInit' + suffix"

#: extending/building.rst:39
msgid ""
"It is possible to export multiple modules from a single shared library by "
"defining multiple initialization functions. However, importing them requires "
"using symbolic links or a custom importer, because by default only the "
"function corresponding to the filename is found. See the *\"Multiple modules "
"in one library\"* section in :pep:`489` for details."
msgstr ""
"Είναι δυνατόν να εξαχθούν πολλά modules από μία κοινόχρηστη βιβλιοθήκη, "
"ορίζοντας πολλαπλές συναρτήσεις αρχικοποίησης. Ωστόσο, για την εισαγωγή τους "
"απαιτείται η χρήση συμβολικών συνδέσμων ή προσαρμοσμένου import μηχανισμού, "
"καθώς από προεπιλογή βρίσκονται μόνο οι συναρτήσεις που αντιστοιχούν στο "
"όνομα του αρχείου. Δείτε το *\"Multiple modules in one library\"* στο :pep:"
"`489` για λεπτομέρειες."

#: extending/building.rst:52
msgid "Building C and C++ Extensions with setuptools"
msgstr "Κατασκευή Επεκτάσεων C και C++ με το setuptools"

#: extending/building.rst:54
msgid ""
"Python 3.12 and newer no longer come with distutils. Please refer to the "
"``setuptools`` documentation at https://setuptools.readthedocs.io/en/latest/"
"setuptools.html to learn more about how build and distribute C/C++ "
"extensions with setuptools."
msgstr ""
"Από την έκδοση Python 3.12 και μετά, το distutils δεν περιλαμβάνεται πλέον. "
"Παρακαλούμε ανατρέξτε στην τεκμηρίωση του ``setuptools`` στη διεύθυνση "
"https://setuptools.readthedocs.io/en/latest/setuptools.html για να μάθετε "
"περισσότερα σχετικά με την κατασκευή και διανομή επεκτάσεων C/C++ με το "
"setuptools."
